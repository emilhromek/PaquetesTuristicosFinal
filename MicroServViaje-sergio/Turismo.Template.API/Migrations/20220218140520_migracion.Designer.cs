// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turismo.Template.AccessData;

namespace Turismo.Template.API.Migrations
{
    [DbContext(typeof(DbContextGeneric))]
    [Migration("20220218140520_migracion")]
    partial class migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Turismo.Template.Domain.Entities.AgendaBus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgendaBuses");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.AgendaChofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChoferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgendaChoferes");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.AgendaCoordinador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoordinadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgendaCoordinadores");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            Capacidad = 44,
                            EmpresaId = 1,
                            Numero = "0234",
                            Observacion = "",
                            Patente = "ABC345"
                        },
                        new
                        {
                            BusId = 2,
                            Capacidad = 52,
                            EmpresaId = 1,
                            Numero = "1893",
                            Observacion = "",
                            Patente = "VDG567"
                        },
                        new
                        {
                            BusId = 3,
                            Capacidad = 52,
                            EmpresaId = 1,
                            Numero = "1894",
                            Observacion = "",
                            Patente = "ABUY819"
                        },
                        new
                        {
                            BusId = 4,
                            Capacidad = 39,
                            EmpresaId = 1,
                            Numero = "2350",
                            Observacion = "",
                            Patente = "ACKN233"
                        },
                        new
                        {
                            BusId = 5,
                            Capacidad = 50,
                            EmpresaId = 2,
                            Numero = "5984",
                            Observacion = "Genérico",
                            Patente = "PSX823"
                        },
                        new
                        {
                            BusId = 6,
                            Capacidad = 50,
                            EmpresaId = 3,
                            Numero = "7742",
                            Observacion = "Genérico",
                            Patente = "MDJ830"
                        },
                        new
                        {
                            BusId = 7,
                            Capacidad = 50,
                            EmpresaId = 4,
                            Numero = "4896",
                            Observacion = "No definido",
                            Patente = "MRIU98"
                        });
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Chofer", b =>
                {
                    b.Property<int>("ChoferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agenda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("ChoferId");

                    b.ToTable("Choferes");

                    b.HasData(
                        new
                        {
                            ChoferId = 1,
                            Agenda = "./agenda/chofer/1",
                            Apellido = "Gonzalez",
                            Contacto = "cel 011-4242-6789",
                            Email = "ninguno",
                            Licencia = "CNT234568DE",
                            Nombre = "José",
                            Vencimiento = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ChoferId = 2,
                            Agenda = "./agenda/chofer/2",
                            Apellido = "Perez",
                            Contacto = "cel 0221-432-1234",
                            Email = "juan999@gmail.com",
                            Licencia = "AP25533467",
                            Nombre = "Juan",
                            Vencimiento = new DateTime(2021, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ChoferId = 3,
                            Agenda = "./agenda/chofer/3",
                            Apellido = "Gutierrez",
                            Contacto = "cel 0221-422-4567",
                            Email = "elpedrogut1980@hotmail.com",
                            Licencia = "CNT3412567P",
                            Nombre = "Pedro",
                            Vencimiento = new DateTime(2023, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ChoferId = 4,
                            Agenda = "./agenda/chofer/3",
                            Apellido = "seoane",
                            Contacto = "cel 011-456-6587",
                            Email = "ninguno",
                            Licencia = "P4563526341",
                            Nombre = "Oscar",
                            Vencimiento = new DateTime(2021, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Coordinador", b =>
                {
                    b.Property<int>("CoordinadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agenda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoordinadorId");

                    b.ToTable("Coordinadores");

                    b.HasData(
                        new
                        {
                            CoordinadorId = 1,
                            Agenda = "./agenda/coordinador/1",
                            Apellido = "Zarza",
                            Contacto = "WS +5491144176068",
                            Email = "sergiozarza0@gmail.com",
                            Nombre = "Sergio"
                        },
                        new
                        {
                            CoordinadorId = 2,
                            Agenda = "./agenda/coordinador/2",
                            Apellido = "Conde",
                            Contacto = "WS +5491134563456",
                            Email = "juanconde01@gmail.com",
                            Nombre = "Juan"
                        },
                        new
                        {
                            CoordinadorId = 3,
                            Agenda = "./agenda/coordinador/3",
                            Apellido = "Hromek",
                            Contacto = "cel 011-4345-4545",
                            Email = "hromekemil@gmail.com",
                            Nombre = "Emil"
                        },
                        new
                        {
                            CoordinadorId = 4,
                            Agenda = "./agenda/coordinador/4",
                            Apellido = "Jimenez",
                            Contacto = "WS +5491141236068",
                            Email = "estebanjimenez23@gmail.com",
                            Nombre = "Esteban"
                        },
                        new
                        {
                            CoordinadorId = 5,
                            Agenda = "./agenda/coordinador/5",
                            Apellido = "Rojas",
                            Contacto = "WS +54922156342726",
                            Email = "gonzar1234@hotmail.com",
                            Nombre = "Gonzalo"
                        });
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            EmpresaId = 1,
                            Contacto = "",
                            Email = "",
                            Nombre = "Ninguna (bus propio)"
                        },
                        new
                        {
                            EmpresaId = 2,
                            Contacto = "Tel 011-444-1234",
                            Email = "contacto@elcondor.com.ar",
                            Nombre = "El Condor"
                        },
                        new
                        {
                            EmpresaId = 3,
                            Contacto = "WS +549115430123",
                            Email = "central@chevalier.com.ar",
                            Nombre = "Chevallier"
                        },
                        new
                        {
                            EmpresaId = 4,
                            Contacto = "",
                            Email = "",
                            Nombre = "Otras empresas"
                        });
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPasajeros")
                        .HasColumnType("int");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Terminal", b =>
                {
                    b.Property<int>("TerminalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TerminalId");

                    b.ToTable("Terminales");

                    b.HasData(
                        new
                        {
                            TerminalId = 1,
                            Descripcion = "Terminal del cruce de Varela",
                            Nombre = "Cruce Varela"
                        },
                        new
                        {
                            TerminalId = 2,
                            Descripcion = "Pasamos por el centro de Quilmes",
                            Nombre = "Centro de Quilmes"
                        },
                        new
                        {
                            TerminalId = 3,
                            Descripcion = "Terminal de omnibus de Avellaneda",
                            Nombre = "Avellaneda"
                        },
                        new
                        {
                            TerminalId = 4,
                            Descripcion = "Terminal de omnibus de Adrogue",
                            Nombre = "Adrogue"
                        },
                        new
                        {
                            TerminalId = 5,
                            Descripcion = "Terminal de omnibus de Lomas de Zamora",
                            Nombre = "Lomas de Zamora"
                        },
                        new
                        {
                            TerminalId = 6,
                            Descripcion = "Terminal de omnibus de Retiro",
                            Nombre = "Retiro"
                        },
                        new
                        {
                            TerminalId = 7,
                            Descripcion = "Terminal de omnibus de Liniers",
                            Nombre = "Liniers"
                        });
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Viaje", b =>
                {
                    b.Property<int>("ViajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<int>("Chofer1Id")
                        .HasColumnType("int");

                    b.Property<int>("Chofer2Id")
                        .HasColumnType("int");

                    b.Property<int>("CoordinadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVuelta")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificadorUnicoDeViaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TerminalOrigen1Id")
                        .HasColumnType("int");

                    b.Property<int>("TerminalOrigen2Id")
                        .HasColumnType("int");

                    b.Property<int>("TerminalOrigen3Id")
                        .HasColumnType("int");

                    b.HasKey("ViajeId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Bus", b =>
                {
                    b.HasOne("Turismo.Template.Domain.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
