// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turismo.Template.AccessData.Context;

namespace Turismo.Template.AccessData.Migrations
{
    [DbContext(typeof(DbContextGeneric))]
    [Migration("20210519155359_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<double>("Sueldo")
                        .HasColumnType("float");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("UserId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.MetodoPago", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetodoPagoId");

                    b.ToTable("MetodosPagos");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Pasajero", b =>
                {
                    b.Property<int>("PasajeroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MetodosPagosMetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PasajeroId");

                    b.HasIndex("MetodosPagosMetodoPagoId");

                    b.HasIndex("UserId");

                    b.ToTable("Pasajeros");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Roll", b =>
                {
                    b.Property<int>("RollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RollId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RollId = 1,
                            Descripcion = "Administrador",
                            Nombre = "Administrador"
                        },
                        new
                        {
                            RollId = 2,
                            Descripcion = "Empleado",
                            Nombre = "Empleado"
                        },
                        new
                        {
                            RollId = 3,
                            Descripcion = "Cliente",
                            Nombre = "Cliente"
                        });
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RollId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RollId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Empleado", b =>
                {
                    b.HasOne("Turismo.Template.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Pasajero", b =>
                {
                    b.HasOne("Turismo.Template.Domain.Entities.MetodoPago", "MetodosPagos")
                        .WithMany("Pasajeros")
                        .HasForeignKey("MetodosPagosMetodoPagoId");

                    b.HasOne("Turismo.Template.Domain.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetodosPagos");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.User", b =>
                {
                    b.HasOne("Turismo.Template.Domain.Entities.Roll", "Roll")
                        .WithMany("Usuarios")
                        .HasForeignKey("RollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roll");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.MetodoPago", b =>
                {
                    b.Navigation("Pasajeros");
                });

            modelBuilder.Entity("Turismo.Template.Domain.Entities.Roll", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
