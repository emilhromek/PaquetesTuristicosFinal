// <auto-generated />
using System;
using Microservicio_Paquetes.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservicio_Paquetes.AccessData.Migrations
{
    [DbContext(typeof(PaquetesDbContext))]
    [Migration("20220218140441_migracion")]
    partial class migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ComentarioDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DateTime");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasajeroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.ToTable("ComentarioDestino");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ComentarioPaqueteHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DateTime");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaqueteHistoricoId")
                        .HasColumnType("int");

                    b.Property<int?>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int>("PasajeroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteId");

                    b.ToTable("ComentarioPaqueteHistorico");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Atractivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorasDeViaje")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Destino");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Atractivo = "Atractivo de Quilmes",
                            Descripcion = "Descripción de Quilmes",
                            Historia = "Historia de Quilmes",
                            HorasDeViaje = 5,
                            Imagen = "C:/Users/emil2/OneDrive/Escritorio/Proyecto software - tp integrador/Imagenes tp ps/QuilmesCityMontage.jpg",
                            Lugar = "Quilmes"
                        },
                        new
                        {
                            Id = 2,
                            Atractivo = "Atractivo de Berazategui",
                            Descripcion = "Descripción de Berazategui",
                            Historia = "Historia de Berazategui",
                            HorasDeViaje = 6,
                            Imagen = "C:/Users/emil2/OneDrive/Escritorio/Proyecto software - tp integrador/Imagenes tp ps/1200px-Plaza_San_Martín_(Berazategui).jpg",
                            Lugar = "Berazategui"
                        },
                        new
                        {
                            Id = 3,
                            Atractivo = "Atractivo de Florencio Varela",
                            Descripcion = "Descripción de Florencio Varela",
                            Historia = "Historia de Varela",
                            HorasDeViaje = 7,
                            Imagen = "C:/Users/emil2/OneDrive/Escritorio/Proyecto software - tp integrador/Imagenes tp ps/Collage_Varela_ciudad.png",
                            Lugar = "Florencio Varela"
                        });
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Excursion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.ToTable("Excursion");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormaPago");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Tarjeta de crédito"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Tarjeta de débito"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Mercado Pago"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Pago Fácil"
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Bitcoin"
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Otra (contactarse)"
                        });
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estrellas")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DestinoId");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 1,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Hilton",
                            Sucursal = "Quilmes"
                        },
                        new
                        {
                            Id = 2,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 1,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Sheraton",
                            Sucursal = "Quilmes"
                        },
                        new
                        {
                            Id = 3,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 1,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Silken",
                            Sucursal = "Quilmes"
                        },
                        new
                        {
                            Id = 4,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 2,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Hilton",
                            Sucursal = "Berazategui"
                        },
                        new
                        {
                            Id = 5,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 2,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Sheraton",
                            Sucursal = "Berazategui"
                        },
                        new
                        {
                            Id = 6,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 2,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Silken",
                            Sucursal = "Berazategui"
                        },
                        new
                        {
                            Id = 7,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 3,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Hilton",
                            Sucursal = "Varela"
                        },
                        new
                        {
                            Id = 8,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 3,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Sheraton",
                            Sucursal = "Varela"
                        },
                        new
                        {
                            Id = 9,
                            Capacidad = 100,
                            Costo = 1000,
                            DestinoId = 3,
                            Direccion = "Calle Falsa 123",
                            Estrellas = 5,
                            Marca = "Silken",
                            Sucursal = "Varela"
                        });
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Paquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaArribo")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaPartida")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("DateTime");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificadorUnicoDePaquete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int>("TotalNoches")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Paquete");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.PaqueteExcursion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExcursionId")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaqueteExcursion");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.PaqueteViaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteId");

                    b.ToTable("PaqueteViaje");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<bool>("Pagado")
                        .HasColumnType("bit");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int>("PasajeroId")
                        .HasColumnType("int");

                    b.Property<int>("Pasajeros")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ReservaExcursion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExcursionId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaExcursion");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ReservaPasajero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PasajeroId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaPasajero");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ComentarioDestino", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Destino", "Destino")
                        .WithMany("Comentarios")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ComentarioPaqueteHistorico", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Paquete", null)
                        .WithMany("ComentarioPaquetesHistorico")
                        .HasForeignKey("PaqueteId");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Excursion", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Destino", "Destino")
                        .WithMany("Excursiones")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Hotel", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Destino", "Destino")
                        .WithMany("Hoteles")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Paquete", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Paquetes")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.PaqueteViaje", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Paquete", "Paquete")
                        .WithMany("PaqueteViajes")
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("Reservas")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Paquete", "Paquete")
                        .WithMany("Reservas")
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPago");

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ReservaExcursion", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Reserva", null)
                        .WithMany("ReservaExcursiones")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.ReservaPasajero", b =>
                {
                    b.HasOne("Microservicio_Paquetes.Domain.Entities.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Destino", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Excursiones");

                    b.Navigation("Hoteles");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.FormaPago", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Paquete", b =>
                {
                    b.Navigation("ComentarioPaquetesHistorico");

                    b.Navigation("PaqueteViajes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Microservicio_Paquetes.Domain.Entities.Reserva", b =>
                {
                    b.Navigation("ReservaExcursiones");
                });
#pragma warning restore 612, 618
        }
    }
}
